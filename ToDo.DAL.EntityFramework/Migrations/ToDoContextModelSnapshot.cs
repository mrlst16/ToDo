// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ToDo.DAL.EntityFramework;

#nullable disable

namespace ToDo.DAL.EntityFramework.Migrations
{
    [DbContext(typeof(ToDoContext))]
    partial class ToDoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ToDo.Models.ToDoItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedUTC")
                        .HasColumnType("datetime2");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("ToDoListId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ToDoListId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("ToDo.Models.ToDoList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedUTC")
                        .HasColumnType("datetime2");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("Label", "UserId")
                        .IsUnique();

                    b.ToTable("Lists");
                });

            modelBuilder.Entity("ToDo.Models.ToDoListStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedUTC")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Status");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2022, 9, 10, 21, 50, 31, 781, DateTimeKind.Utc).AddTicks(7503),
                            LastUpdated = new DateTime(2022, 9, 10, 21, 50, 31, 781, DateTimeKind.Utc).AddTicks(7508),
                            Name = "Backlog"
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2022, 9, 10, 21, 50, 31, 781, DateTimeKind.Utc).AddTicks(7512),
                            LastUpdated = new DateTime(2022, 9, 10, 21, 50, 31, 781, DateTimeKind.Utc).AddTicks(7513),
                            Name = "InProgress"
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(2022, 9, 10, 21, 50, 31, 781, DateTimeKind.Utc).AddTicks(7514),
                            LastUpdated = new DateTime(2022, 9, 10, 21, 50, 31, 781, DateTimeKind.Utc).AddTicks(7515),
                            Name = "OnHold"
                        },
                        new
                        {
                            Id = 4,
                            CreateDate = new DateTime(2022, 9, 10, 21, 50, 31, 781, DateTimeKind.Utc).AddTicks(7516),
                            LastUpdated = new DateTime(2022, 9, 10, 21, 50, 31, 781, DateTimeKind.Utc).AddTicks(7516),
                            Name = "Completed"
                        });
                });

            modelBuilder.Entity("ToDo.Models.Users.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedUTC")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ToDo.Models.ToDoItem", b =>
                {
                    b.HasOne("ToDo.Models.ToDoList", null)
                        .WithMany("Items")
                        .HasForeignKey("ToDoListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ToDo.Models.ToDoList", b =>
                {
                    b.HasOne("ToDo.Models.Users.User", null)
                        .WithMany("Lists")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ToDo.Models.ToDoList", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("ToDo.Models.Users.User", b =>
                {
                    b.Navigation("Lists");
                });
#pragma warning restore 612, 618
        }
    }
}
